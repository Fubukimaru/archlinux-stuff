This will keep jgmenu open until you click outside of the menu.

- cd to build dir (mine is ~/jgmenu)
- open jgmenu.c in editor
- remove all "hide_or_exit();" from "void action_cmd(char *cmd)" section
- in term:
			cd jgmenu
			make clean
			make
			sudo make install

DO NOT copy and paste the following, but for example of editing change:

BEFORE:

void action_cmd(char *cmd)
{
	char *p = NULL;

	if (!cmd)
		return;
	if (!config.spawn && strncmp("^checkout(", cmd, 10) &&
	    strncmp("^sub(", cmd, 5) && strncmp("^back(", cmd, 6) &&
	    strncmp("^pipe(", cmd, 6)) {
		printf("%s\n", menu.sel->cmd);
		exit(0);
	}
	if (!strncmp(cmd, "^checkout(", 10)) {
		p = parse_caret_action(cmd, "^checkout(");
		if (!p)
			return;
		menu.current_node->last_sel = menu.sel;
		menu.current_node->last_first = menu.first;
		checkout_submenu(p);
		update(1);
	} else if (!strncmp(cmd, "^sub(", 5)) {
		p = parse_caret_action(cmd, "^sub(");
		if (!p)
			return;
		spawn(p);
		hide_or_exit();
	} else if (!strncmp(cmd, "^back(", 6)) {
		checkout_parent();
		update(1);
	} else if (!strncmp(cmd, "^term(", 6)) {
		struct sbuf s;

		p = parse_caret_action(cmd, "^term(");
		if (!p)
			return;
		sbuf_init(&s);
		term_build_terminal_cmd(&s, strstrip(p), config.terminal_exec,
					config.terminal_args);
		spawn(s.buf);
		free(s.buf);
		hide_or_exit();
	} else if (!strncmp(cmd, "^pipe(", 6)) {
		p = parse_caret_action(cmd, "^pipe(");
		if (!p)
			return;
		menu.current_node->last_sel = menu.sel;
		menu.current_node->last_first = menu.first;
		pipemenu_add(p);
		update(1);
	} else {
		spawn(cmd);
		hide_or_exit();
	}
}

AFTER:

void action_cmd(char *cmd)
{
	char *p = NULL;

	if (!cmd)
		return;
	if (!config.spawn && strncmp("^checkout(", cmd, 10) &&
	    strncmp("^sub(", cmd, 5) && strncmp("^back(", cmd, 6) &&
	    strncmp("^pipe(", cmd, 6)) {
		printf("%s\n", menu.sel->cmd);
		exit(0);
	}
	if (!strncmp(cmd, "^checkout(", 10)) {
		p = parse_caret_action(cmd, "^checkout(");
		if (!p)
			return;
		menu.current_node->last_sel = menu.sel;
		menu.current_node->last_first = menu.first;
		checkout_submenu(p);
		update(1);
	} else if (!strncmp(cmd, "^sub(", 5)) {
		p = parse_caret_action(cmd, "^sub(");
		if (!p)
			return;
		spawn(p);
	} else if (!strncmp(cmd, "^back(", 6)) {
		checkout_parent();
		update(1);
	} else if (!strncmp(cmd, "^term(", 6)) {
		struct sbuf s;

		p = parse_caret_action(cmd, "^term(");
		if (!p)
			return;
		sbuf_init(&s);
		term_build_terminal_cmd(&s, strstrip(p), config.terminal_exec,
					config.terminal_args);
		spawn(s.buf);
		free(s.buf);
	} else if (!strncmp(cmd, "^pipe(", 6)) {
		p = parse_caret_action(cmd, "^pipe(");
		if (!p)
			return;
		menu.current_node->last_sel = menu.sel;
		menu.current_node->last_first = menu.first;
		pipemenu_add(p);
		update(1);
	} else {
		spawn(cmd);
	}
}
